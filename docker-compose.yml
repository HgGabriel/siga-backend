version: '3.8'

services:
  # Serviço do Banco de Dados MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpass
    volumes:
      - mongo-data:/data/db

  # Serviço do Backend (sua aplicação Node.js)
  app:
    container_name: backend_app
    # O 'contexto' do build agora é a pasta ./backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: npm start
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
    # O volume garante que as alterações no seu código backend reflitam no container sem precisar de rebuild
    volumes:
      - ./backend:/app
      - /app/node_modules # Impede que a pasta node_modules local sobrescreva a do container

  # NOVO SERVIÇO DO FRONTEND
  frontend:
    container_name: frontend_server
    # O 'contexto' do build agora é a pasta ./frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5500:5500"
    # O volume é a MÁGICA do live-reload. Ele mapeia sua pasta frontend local
    # para a pasta /app dentro do container. Qualquer alteração que você salvar
    # localmente será refletida instantaneamente no container, e o live-server
    # fará o reload do navegador.
    volumes:
      - ./frontend:/app
    depends_on:
      - app

volumes:
  mongo-data: